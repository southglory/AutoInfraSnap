# 📌 프로젝트 개요: AutoInfraSnap

하루 만에 만드는 자동 인프라 상태 스냅샷 도구

---

## 🌱 아이디어 시발점 (발표 자료 형식)

### 문제 인식
- 서버/인프라 상태를 주기적으로 확인하거나 공유하려면 수동 명령어 입력 또는 수작업 리포트 작성이 필요
- 개발-운영 간 커뮤니케이션이 번거롭고 비효율적임

### 해결 아이디어
- 명령어 한 줄로 시스템의 핵심 상태를 수집하고 저장할 수 있는 CLI 툴 제작
- 필요 시, 대시보드나 클라우드 업로드로 상태 공유 자동화 가능

### 차별화 포인트
- 하루 만에 만들 수 있을 만큼 경량화된 구조
- 운영 자동화 및 로컬/클라우드 환경 모두 지원
- CLI + 웹 UI 선택 가능

---

## 🧭 사용자 여정 (User Journey)

### 일반 사용자 (개발자, 운영자)
1. `pip install autoinfrasnap` 혹은 `git clone`
2. `autoinfrasnap --report` 명령 실행
3. `/reports/infra_YYYYMMDD.json` 저장 확인
4. 필요 시 `--upload` 옵션으로 S3 업로드
5. (선택) Flask 대시보드로 상태 확인

### 관리자 (DevOps 엔지니어)
1. CI/CD에 `autoinfrasnap` 주기 실행 추가
2. 리포트를 사내 NAS나 S3로 자동 백업
3. 대시보드 서버 운영으로 팀 전체와 정보 공유

---

## 🧪 기술 스택

| 구분 | 스택 |
|------|------|
| 언어 | Python 3.10 |
| 시스템 정보 수집 | psutil 5.9+, docker 6.1+, subprocess |
| CLI | argparse, click (옵션) |
| 리포트 저장 | json, yaml |
| 웹 대시보드 | Flask 2.3+, Chart.js (선택) |
| 클라우드 연동 | boto3 (S3 업로드 시) |
| 패키징 | setup.py 또는 poetry |
| 배포 | Dockerfile (선택) |

---

## 🧑‍💼 페르소나와 시나리오

### 👩‍💻 김개발 (개발자)
- 로컬 Docker 환경에서 리소스 상태를 주기적으로 리포트화하여 기록하고자 함
- `autoinfrasnap`을 GitHub Actions에서 주 1회 실행하여 저장

### 🧑‍🔧 박운영 (운영 담당자)
- 서버 장애 발생 시, 리포트를 통해 직전 시스템 상태 파악 필요
- Flask 대시보드 모드 실행하여 팀원들과 빠르게 상태 공유

### 👨‍🏫 이매니저 (교육 담당자)
- 사내 인프라 교육용으로 시스템 정보 수집과 시각화 예시를 보여주고자 함
- 샘플 리포트와 대시보드 예제로 활용

---

## 🔗 API 엔드포인트 (웹 대시보드 모드 기준)

### 1. 시스템 상태 조회
```
GET /api/system
```
- 설명: 최신 상태 리포트를 조회
- 응답 예시:
```json
{
  "cpu": 37.5,
  "memory": 68.9,
  "disk": 82.3,
  "docker_containers": ["web", "db"],
  "timestamp": "2025-04-10T12:45:00"
}
```

### 2. 전체 리포트 목록
```
GET /api/reports
```
- 설명: 저장된 리포트 목록 조회

### 3. 특정 리포트 조회
```
GET /api/report/<filename>
```
- 설명: 특정 날짜의 리포트 JSON 반환

---

## 📄 PRD (Product Requirements Document)

### 핵심 목표
- 로컬/서버 환경에서 시스템 상태를 간편하게 스냅샷 저장
- 선택적으로 웹 대시보드 및 클라우드 업로드 기능 제공

### 핵심 기능 목록
- [x] CLI 기반 시스템 정보 수집
- [x] JSON/YAML 리포트 저장
- [x] 리포트 파일명 자동 구성
- [x] CLI 옵션으로 업로드 가능
- [ ] (선택) 웹 대시보드 시각화

### 실행 예시 (스크린샷 설명용)
```
$ autoinfrasnap --report
✅ CPU 사용률: 28.2%
✅ 메모리 사용률: 71.3%
✅ 디스크 사용률: 85.4%
✅ 실행 중인 컨테이너: ['nginx', 'redis']
📁 리포트 저장 완료: /reports/infra_20250410.json
```

---

## 📢 PR/FAQ 문서

### Q: 왜 이 프로젝트를 만들었나요?
A: 운영 중 수시로 시스템 상태를 확인해야 할 일이 많은데, 반복적이고 수작업이 많았습니다. 이를 자동화하고 공유까지 할 수 있는 툴을 만들고 싶었습니다.

### Q: 하루 만에 만들었다는데 완성도는?
A: 핵심 기능은 충분하며, 실제 사용에 무리가 없습니다. 웹 UI 및 클라우드 연동은 선택적 기능으로, 필요에 따라 점진적 확장이 가능합니다.

### Q: 이걸 통해 무엇을 증명하고 싶나요?
A: 시스템 구조에 대한 이해, 운영 자동화에 대한 관심, 실전 적용 가능한 도구를 신속하게 기획/개발하는 역량을 보여주고 싶습니다.

---

## 📂 기타 제안
- `.http` 파일로 API 테스트 자동화 구성 가능
- GitHub README 템플릿 및 badge 설정
- `.devcontainer`로 Dev 환경 배포 스크립트화

---
📝 _with ChatGPT 2025_

