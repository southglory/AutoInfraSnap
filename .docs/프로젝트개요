# 📌 프로젝트 개요: AutoInfraSnap

하루 만에 만드는 자동 인프라 상태 스냅샷 도구

---

## 🌱 아이디어 시발점 (발표 자료 형식)

### 문제 인식
- 서버/인프라 상태를 주기적으로 확인하거나 공유하려면 수동 명령어 입력 또는 수작업 리포트 작성이 필요
- 개발-운영 간 커뮤니케이션이 번거롭고 비효율적임

### 해결 아이디어
- 명령어 한 줄로 시스템의 핵심 상태를 수집하고 저장할 수 있는 CLI 툴 제작
- S3 업로드로 상태 공유 자동화

### 차별화 포인트
- 하루 만에 만들 수 있을 만큼 경량화된 구조
- CLI 기반의 심플한 인터페이스
- 자동화된 상태 수집 및 저장

---

## 🧭 사용자 여정 (User Journey)

### 일반 사용자 (개발자, 운영자)
1. `pip install autoinfrasnap`
2. `autoinfrasnap --report` 명령 실행
3. `/reports/infra_YYYYMMDD.json` 저장 확인
4. 필요 시 `--upload` 옵션으로 S3 업로드

### 관리자 (DevOps 엔지니어)
1. CI/CD에 `autoinfrasnap` 주기 실행 추가
2. 리포트를 S3로 자동 백업

---

## 🧪 기술 스택

| 구분 | 스택 |
|------|------|
| 언어 | Python 3.13 |
| 시스템 정보 수집 | psutil 5.9+, docker 6.1+ |
| CLI | argparse |
| 리포트 저장 | json |
| 클라우드 연동 | boto3 |
| 패키징 | setup.py |

---

## 🧑‍💼 페르소나와 시나리오

### 👩‍💻 김개발 (개발자)
- 로컬 Docker 환경에서 리소스 상태를 주기적으로 리포트화하여 기록
- GitHub Actions에서 주 1회 실행하여 저장

### 🧑‍🔧 박운영 (운영 담당자)
- 서버 장애 발생 시, 리포트를 통해 직전 시스템 상태 파악
- CLI로 빠르게 상태 확인 및 공유

---

## 📄 개발 일정 (8시간)

### 오전 (4시간)
- [x] 프로젝트 구조 설정 (1시간)
- [x] CLI 인터페이스 구현 (1시간)
- [x] 시스템 정보 수집 구현 (2시간)

### 오후 (4시간)
- [x] JSON 리포트 생성 (1시간)
- [x] S3 업로드 기능 (2시간)
- [x] 문서화 및 테스트 (1시간)

---

## 📢 핵심 기능

### 필수 기능
- [x] CLI 기반 시스템 정보 수집
- [x] JSON 리포트 저장
- [x] 리포트 파일명 자동 구성
- [x] S3 업로드

### 실행 예시
```
$ autoinfrasnap --report
✅ CPU 사용률: 28.2%
✅ 메모리 사용률: 71.3%
✅ 디스크 사용률: 85.4%
✅ 실행 중인 컨테이너: ['nginx', 'redis']
📁 리포트 저장 완료: /reports/infra_20250410.json
```

---

## 📂 향후 확장 가능성
- 웹 대시보드 추가
- 추가 메트릭 수집
- 알림 기능 구현

---
�� _하루 만에 만든 프로젝트_

